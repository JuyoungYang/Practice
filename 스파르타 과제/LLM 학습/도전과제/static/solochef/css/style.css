.chat-container {
    max-height: 500px;
    overflow-y: auto;
    background-color: white;
    border-radius: 15px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    padding: 20px;
}

Copy.chat-message {
    margin: 10px;
    padding: 15px;
    border-radius: 15px;
    max-width: 80%;
    white-space: pre-wrap;
    word-wrap: break-word;
}

.user-message {
    background-color: #FF6B6B;
    color: white;
    margin-left: auto;
}

.bot-message {
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    margin-right: auto;
}

/* static/solochef/js/chat.js */
let currentMenu = '';

function appendMessage(message, isUser) {
    const chatContainer = document.getElementById('chatContainer');
    const messageDiv = document.createElement('div');
    messageDiv.className = `chat-message ${isUser ? 'user-message' : 'bot-message'}`;
    messageDiv.textContent = message;
    chatContainer.appendChild(messageDiv);
    chatContainer.scrollTop = chatContainer.scrollHeight;
}

document.getElementById('chatForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const userMessage = formData.get('message');
    appendMessage(userMessage, true);
    
    try {
        const response = await fetch('/chat/', {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRFToken': formData.get('csrfmiddlewaretoken')
            }
        });
        
        const data = await response.json();
        if (data.status === 'success') {
            appendMessage(data.response, false);
            currentMenu = data.response;
            document.getElementById('menuChoiceContainer').style.display = 'block';
        } else {
            appendMessage('오류가 발생했습니다: ' + data.message, false);
        }
    } catch (error) {
        appendMessage('서버 오류가 발생했습니다.', false);
    }
    
    this.reset();
});

document.getElementById('menuChoiceForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    formData.append('menu', currentMenu);
    const choice = formData.get('choice');
    appendMessage(`선택: ${choice}`, true);
    
    try {
        const response = await fetch('/recipe/', {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value
            }
        });
        
        const data = await response.json();
        if (data.status === 'success') {
            appendMessage(data.recipe, false);
            document.getElementById('menuChoiceContainer').style.display = 'none';
        } else {
            appendMessage('오류가 발생했습니다: ' + data.message, false);
        }
    } catch (error) {
        appendMessage('서버 오류가 발생했습니다.', false);
    }
    
    this.reset();
});